<canvas class="absolute top-0 bottom-0 left-0 right-0 h-full w-full" id="canvas"
></canvas>

<script>
  import * as THREE from 'three'
  import fragmentShader from '../lib/shader.glsl?raw'

  // See: https://codepen.io/ZachSaucier/pen/BawVxYe
  function main() {
    const renderer = new THREE.WebGLRenderer({ canvas })
    renderer.autoClearColor = false

    const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, -1, 1)
    const scene = new THREE.Scene()
    const plane = new THREE.PlaneGeometry(2, 2)

    const uniforms = {
      iTime: { value: 0 },
      iResolution: { value: new THREE.Vector3() },
    }
    const material = new THREE.ShaderMaterial({
      fragmentShader,
      uniforms,
    })
    scene.add(new THREE.Mesh(plane, material))

    function resizeRendererToDisplaySize(renderer) {
      const canvas = renderer.domElement
      const width = canvas.clientWidth
      const height = canvas.clientHeight
      const needResize = canvas.width !== width || canvas.height !== height
      if (needResize) {
        renderer.setSize(width, height, false)
      }
      return needResize
    }

    function render(time) {
      time *= 0.001 // convert to seconds

      resizeRendererToDisplaySize(renderer)

      const canvas = renderer.domElement
      uniforms.iResolution.value.set(canvas.width, canvas.height, 1)
      uniforms.iTime.value = time

      renderer.render(scene, camera)

      requestAnimationFrame(render)
    }

    requestAnimationFrame(render)
  }

  main(document.querySelector('#canvas'))
</script>
